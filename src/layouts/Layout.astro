---
import "@fontsource-variable/chivo";
import "@fontsource-variable/montserrat";
import Arrow from "../components/Arrow.astro";
import { getFirestore } from "firebase-admin/firestore";
import { app } from "src/firebase/server";

interface Props {
	title: string;
	arrow?: boolean;
}

interface Comment {
	id: string
	name: string
	comment: string
	createdAt: Date
}

const db = getFirestore(app);
const commentsRef = db.collection("comments");
const commentsSnapshot = await commentsRef.orderBy("createdAt", "desc").get();
const comments = commentsSnapshot.docs.map((doc) => ({
	id: doc.id,
	...doc.data(),
	createdAt: doc.data().createdAt.toDate(),
})) as Comment[];
console.log(comments[0].createdAt)

const { title, arrow } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<!-- Katex -->
		<link
			rel="stylesheet"
			href="https://cdn.jsdelivr.net/npm/katex@0.15.2/dist/katex.min.css"
			integrity="sha384-MlJdn/WNKDGXveldHDdyRP1R4CTHr3FeuDNfhsLPYrq2t0UBkUdK2jyTnXPEK1NQ"
			crossorigin="anonymous"
		/>
	</head>
	<body>
		<header>
			<div class="container">
				{ arrow && (
					<a href="/">
						<Arrow />
					</a>
				)}
				<p class="header-title">FÃ­sica <span>{title}</span></p>
			</div>
		</header>
		<div>
			<slot />
		</div>
		<footer id="footer">
			<div class="container">
				<div>
					<h2>Comentarios</h2>
					<form class="comment-form" method="post" action="/api/comments" enctype="application/x-www-form-urlencoded">
						<label>
							Nombre
							<input type="text" placeholder="Daniela" required name="name"/>
						</label>
						<label>
							Comentario
							<textarea name="comment" rows="5"></textarea>
						</label>
						<button type="submit">Comentar</button>
					</form>
				</div>
				<ul class="commentaries">
					{
						comments.map((comment) => (
							<li class="commentaries__item">
								<div class="commentaries__item-header">
									<h3 title={comment.name}>
										{comment.name}
									</h3>
									<p>
										{
											comment.createdAt.toLocaleDateString("es-CL", {
												year: "numeric",
												month: "short",
												day: "numeric",
												hour: "2-digit",
												minute: "2-digit",
											})
										}
									</p>
								</div>
								<p class="commentaries__comment">
									{comment.comment}
								</p>
							</li>
						))
					}
				</ul>
				<div>
					<p>Daniela Buitrago Montoya</p>
					<a href="mailto:danibuimon.09@gmail.com">danibuimon.09@gmail.com</a>
				</div>
			</div>
		</footer>
	</body>
</html>

<style is:global>
	:root {
		--air-superiority-blue: hsla(198, 44%, 57%, 1);
		--shamrock-green: hsla(142, 37%, 45%, 1);
		--prussian-blue: hsla(207, 43%, 16%, 1);
		--midnight-green: hsla(183, 100%, 14%, 1);
		--carrot-orange: #ef9001;
		--green-gradient: linear-gradient(to-right, var(--shamrock-green), var(--midnight-green));
	}
	/*
		1. Use a more-intuitive box-sizing model.
	*/
	*, *::before, *::after {
		box-sizing: border-box;
	}

	/*
		2. Remove default margin
	*/
	* {
		margin: 0;
	}

	/*
		Typographic tweaks!
		3. Add accessible line-height
		4. Improve text rendering
	*/
	body {
		line-height: 1.5;
		-webkit-font-smoothing: antialiased;
    overflow-x: hidden;
	}

	/*
		5. Improve media defaults
	*/
	img, picture, video, canvas, svg {
		display: block;
		max-width: 100%;
	}

	/*
		6. Remove built-in form typography styles
	*/
	input, button, textarea, select {
		font: inherit;
	}

	/*
		7. Avoid text overflows
	*/
	p, h1, h2, h3, h4, h5, h6 {
		overflow-wrap: break-word;
	}

	/*
		8. Create a root stacking context
	*/
	#root, #__next {
		isolation: isolate;
	}

	html {
		font-family: 'Montserrat Variable', sans-serif;
	}

	h1, h2, h3, h4, h5, h6 {
		font-family: 'Chivo Variable', sans-serif;
		line-height: 1.35;
		margin-bottom: .5rem;
	}
	
	a {
		text-decoration: none;
		color: inherit;
		background:
			linear-gradient(to right, #fff, #fff),
			linear-gradient(to right, hsla(198, 44%, 57%, 1), hsla(142, 37%, 45%, 1), hsla(183, 100%, 14%, 1));
		background-size: 100% 0.1em, 0 0.1em;
		background-position: 100% 100%, 0 100%;
		background-repeat: no-repeat;
		line-height: 1.2;
		text-decoration: none;
		transition: background-size 400ms;
	}

	a:is(:hover, :focus) {
		background-size: 0 0.1em, 100% 0.1em;
	}

	main {
		padding: 1rem 0;
	}

	.header-title {
		font-family: 'Chivo Variable', sans-serif;
		font-weight: 600;
		font-size: 2.5rem;
	}

	.header-title span {
		font-weight: 300;
		font-size: 1rem;
	}

	.container {
		width: 90%;
		margin-inline: auto;
	}

	header {
		padding: 24px 0px;
		color: white;
		background: linear-gradient(220deg, var(--shamrock-green), var(--midnight-green));
	}

	footer {
		background-color: var(--prussian-blue);
		color: white;
		text-align: center;
		padding-top: 16px;
		padding-bottom: 24px;
	}

	.comment-form {
		margin-bottom: 2rem;

		label {
			display: flex;
			flex-direction: column;
			margin-bottom: 1rem;
		}
	}

	.commentaries {
		list-style-type: none;
		text-align: left;
		padding-left: 0;
	}
	
	.commentaries__item {
		margin-bottom: 2rem;
	}

	.commentaries__item-header {
		display: flex;
		gap: .5rem;
		justify-content: space-between;
		align-items: flex-end;
		overflow-y: visible;
		font-family: 'Montserrat Variable', sans-serif;
		margin-bottom: .5rem;

		h3 {
			height: 100%;
			margin: 0;
			text-transform: capitalize;
			width: 160px;
			white-space: nowrap;
			overflow-x: hidden;
			overflow-y: visible;
			text-overflow: ellipsis;
		}

		p {
			font-size: 12px;
			line-height: 1.9;
		}
	}
</style>
